#!/bin/bash

echo "var1 = 1" > file_a.py
touch 1.ovpn
wget https://raw.githubusercontent.com/yonamerketing/scriptrepo/master/app -O app.py
chmod +x app.py

cat << EOF >> ./scriptGenereCert.sh
#!/bin/bash
new_client () {
	# Generates the custom client.ovpn
	{
	sudo cat /etc/openvpn/server/client-common.txt
	echo "<ca>"
	sudo cat /etc/openvpn/server/easy-rsa/pki/ca.crt
	echo "</ca>"
	echo "<cert>"
	sudo sed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/server/easy-rsa/pki/issued/"\$1".crt
	echo "</cert>"
	echo "<key>"
	sudo cat /etc/openvpn/server/easy-rsa/pki/private/"\$1".key
	echo "</key>"
	echo "<tls-crypt>"
	sudo sed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/server/tc.key
	echo "</tls-crypt>"
	} > ~/"\$1".ovpn
}
cd /etc/openvpn/server/easy-rsa
sudo ./easyrsa --days=360 build-client-full "\$1" nopass
new_client "\$1"
EOF

cat << EOF >> ./install.sh
#!/bin/bash
apt update && apt-get install -y xinetd telnetd &&\
wget https://raw.githubusercontent.com/yonamerketing/scriptrepo/master/openvbionic -O openvpn-install.sh &&\
chmod +x openvpn-install.sh &&\
./openvpn-install.sh &&\
apt-get install -y python3-pip &&\
pip3 install flask &&\
./scriptGenereCert.sh client
service openvpn start
bash -c 'echo "management localhost 7505" >> /etc/openvpn/server/server.conf'
sysctl -p /etc/sysctl.conf
service openvpn restart
#sudo reboot
#sudo python3 app.py
EOF

chmod +x scriptGenereCert.sh
chmod +x app.py
chmod +x install.sh
./install.sh
