#!/bin/bash

sudo apt update && sudo apt-get install -y xinetd telnetd &&\
wget https://git.io/vpn -O openvpn-install.sh &&\
chmod +x openvpn-install.sh &&\
sudo ./openvpn-install.sh

cat << EOF >> ./app.py
import base64

from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    encoded = ""
    with open('client.ovpn') as f:
        mystr = f.readlines()
        strcomp = ""
        for line in mystr:
            strcomp += line
        strcomp = bytes(strcomp, encoding='utf-8')
        encoded = base64.b64encode(strcomp)
        encodedStr = str(encoded,"utf-8")
        #print(encodedStr)
    return (encodedStr)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=80)
EOF


cat << EOF >> ./scriptGenereCert.sh
#!/bin/bash

new_client () {
	# Generates the custom client.ovpn
	{
	cat /etc/openvpn/server/client-common.txt
	echo "<ca>"
	cat /etc/openvpn/server/easy-rsa/pki/ca.crt
	echo "</ca>"
	echo "<cert>"
	sed -ne '/BEGIN CERTIFICATE/,$ p' /etc/openvpn/server/easy-rsa/pki/issued/"\$1".crt
	echo "</cert>"
	echo "<key>"
	cat /etc/openvpn/server/easy-rsa/pki/private/"\$1".key
	echo "</key>"
	echo "<tls-crypt>"
	sed -ne '/BEGIN OpenVPN Static key/,$ p' /etc/openvpn/server/tc.key
	echo "</tls-crypt>"
	} > ~/"\$1".ovpn
}
cd /etc/openvpn/server/easy-rsa
sudo ./easyrsa --days=360 build-client-full "\$1" nopass
new_client "\$1"
EOF

cat << EOF >> ./install.sh
#!/bin/bash
sudo apt-get install -y python3-pip &&\
sudo pip3 install flask &&\
./scriptGenereCert.sh client
sudo python3 app.py
EOF

chmod +x scriptGenereCert.sh
chmod +x app.py
chmod +x install.sh
